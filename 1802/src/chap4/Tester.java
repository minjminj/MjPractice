package chap4;

public class Tester {

	public static void main(String[] args) {
		/*
		Ex20 e = new Ex20();
		//앞에 Ex20은 클래스명, 뒤에 Ex20은 생성자명, e가 변수이긴 하지만 명칭은 object | 객체 | 인스턴스

		Ex20 e2 = new Ex20(777);
		e2 = new Ex20(888); // 객체명과 생성자가 동일한 클래스 내에서는 일대일 대응 아니다. 하지만 같은 객체명에 새로운 생성자 저장하면 이전 것은 메모리에서 지워짐.
		
		e = new Ex20("홍길동", 95.5);
		// 객체명 e나 e2를 다시 사용하거나 새로운 객체명 생성해도 무관. 단 매개변수 부분을 잘 지켜줘야 한다.
		
		System.out.println("Ex21 class test.........................");
		Ex21 e3 = new Ex21(); // 객체 생성 -> 인스턴스형 변수를 사용할 수 있게 됨.
		System.out.println(e3.name);
		System.out.println(e3.score);
		
		e3 = new Ex21("일지매", 95.9);
		System.out.println(e3.name);
		System.out.println(e3.score);
		
		
		MethodTest mt = new MethodTest();
		// mt.sum(); --> private 타입이라 오류.
		mt.sum2();
		
		double d = mt.avg(90, 75);
		System.out.println("평균: " + d);
		
		B b = new B();
		A a = mt.compute(b);
		
		
	
		
		Ex12 e12 = new Ex12();
			
		
		Ex13 e13 = new Ex13();
		
		
		Ex14 e14 = new Ex14();
		e14.compute();
		
		Ex15 e15 = new Ex15(112.3);
		e15 = new Ex15(167.4);
		
		Ex16 e16 = new Ex16();
		e16.compute();
		
		new Ex16().compute();	// 이벤트 같은 경우는 매번 메모리에 저장하지 않아도 됨. 그래서 객체 생성하지 않고 바로 실행.
		
		Ex17 e17 = new Ex17();	// 비록 class 내에서 생성자 만들지 않았지만 객체화하려면 생성자를 쓴다.
		e17.compute();
		
		Ex18 e18 = new Ex18();
		e18.compute(20, true);
		e18.compute(28, false);
		e18.compute(38, true);
		e18.compute(48, false);
		
		
		
		new P117_SwitchExample().chk();
		
		
		new P118_SwitchNoBreakCaseExample().test();
		
		
		P118_SwitchCharExample s3 = new P118_SwitchCharExample();
		s3.test('a');
		s3.test('B');
		
		
		
		P119_SwitchStringExample s4 = new P119_SwitchStringExample("부장");
		s4.chk();
		s4 = new P119_SwitchStringExample("사원");
		s4.chk();
		
		
		
		P121_ForPrintFrom1To10Example f1 = new P121_ForPrintFrom1To10Example();
		
		
		new P123_ForSumFrom1To100Example();
		
		
		new P123_ForFloatCounterExample();
		*/
		
		
		new P124_ForMultilpicaionTableExample();
		
		
		
		
		
		
	}

}
